// <auto-generated />
using FruitsProducer.Api;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FruitsProducer.Api.Migrations
{
    [DbContext(typeof(FruitsProducerDbContext))]
    [Migration("20240623192539_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("FruitsProducer.Api.Fruit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProducerCountryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProducerCountryId");

                    b.ToTable("Fruits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Banana",
                            Price = 3.99m,
                            ProducerCountryId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Banana",
                            Price = 2.99m,
                            ProducerCountryId = 4
                        },
                        new
                        {
                            Id = 3,
                            Name = "Manzana",
                            Price = 2.99m,
                            ProducerCountryId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Manzana",
                            Price = 2.99m,
                            ProducerCountryId = 3
                        },
                        new
                        {
                            Id = 5,
                            Name = "Aguacate",
                            Price = 0.99m,
                            ProducerCountryId = 2
                        });
                });

            modelBuilder.Entity("FruitsProducer.Api.ProducerCountry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProducerCountries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "España"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cuba"
                        },
                        new
                        {
                            Id = 3,
                            Name = "EEUU"
                        },
                        new
                        {
                            Id = 4,
                            Name = "India"
                        });
                });

            modelBuilder.Entity("FruitsProducer.Api.Fruit", b =>
                {
                    b.HasOne("FruitsProducer.Api.ProducerCountry", "ProducerCountry")
                        .WithMany("Fruits")
                        .HasForeignKey("ProducerCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProducerCountry");
                });

            modelBuilder.Entity("FruitsProducer.Api.ProducerCountry", b =>
                {
                    b.Navigation("Fruits");
                });
#pragma warning restore 612, 618
        }
    }
}
